

<EditForm Model="@jS" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <fieldset disabled="@Disabled">
        <div class="form-group">
            <label>Job Seeker First Name: </label>
            <div>
                <InputText @bind-Value="jS.FirstName" class="form-control" />
                <ValidationMessage For="@(() => jS.FirstName)" />
            </div>
        </div>
        <div class="form-group">
            <label>Job Seeker Last Name: </label>
            <div>
                <InputText @bind-Value="jS.LastName" class="form-control" />
                <ValidationMessage For="@(() => jS.LastName)" />
            </div>
        </div>
        <div class="form-group">
            <label>Job Seeker Contact: </label>
            <div>
                <InputText @bind-Value="jS.Contact" class="form-control" />
                <ValidationMessage For="@(() => jS.Contact)" />
            </div>
        </div>
        <div class="form-group">
            <label>Job Seeker Email: </label>
            <div>
                <InputText @bind-Value="jS.Email" class="form-control" />
                <ValidationMessage For="@(() => jS.Email)" />
            </div>
        </div>
        <div class="form-group">
            <label>Job Seeker Resume: </label>
            <div>
                <InputText @bind-Value="jS.Resume" class="form-control" />
                <ValidationMessage For="@(() => jS.Resume)" />
            </div>
        </div>

        <div class="form-control-file">
            <label for="image">Choose Profile Picture:</label>
            <InputFile OnChange="OnFileChange" />
        </div>

    </fieldset>
        @if (!Disabled)
        {
            <button type="submit" class="btn btn-success btn-block">
                @ButtonText
            </button>
        }
        <BackToList Target="jSs" />
</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public JS jS { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    async Task OnFileChange(InputFileChangeEventArgs e)
    {
        var format = " image/png";
        var resizedImage = await e.File.RequestImageFileAsync(format, 300, 300);
        var buffer = new byte[resizedImage.Size];
        await resizedImage.OpenReadStream().ReadAsync(buffer);
        var imageData = $"data:{format};base64,{Convert.ToBase64String(buffer)}";
        jS.Image = imageData;

    }
}
