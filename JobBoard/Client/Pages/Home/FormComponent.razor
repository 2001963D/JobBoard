@inject HttpClient _client

<EditForm Model="@search" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label>Job Search: </label>
        <div>
            <InputSelect @bind-Value="search.ListingId" class="form-control">
                <option value="">--Select Job--</option>
                @if (Listings != null)
                {
                    foreach (var listing in Listings)
                    {
                        <option value="@listing.Id">@listing.Name</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => search.ListingId)" />
        </div>
    </div>
    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>
    }
    <BackToList Target="vehicles" />
</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    Search search = new Search();
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Listing> Listings;

    protected async override Task OnInitializedAsync()
    {
        Listings = await _client.GetFromJsonAsync<Listing>($"{Endpoints.ListingsEndpoint}");
    }
}
