@page "/searchs/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]
@implements IDisposable


<h><b><u>Search for Jobs</u></b></h>
<hr />

@if (Listings == null)
{
    <div class="alert alert-info">Loading...</div>
}
else
{
    <table class="table table-responsive" id="listingsTable">
        <thead>
            <tr>
                <th>ID</th>
                <th>Title</th>
                <th>Location</th>
                <th>Navigate</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var listing in Listings)
            {
                <tr>
                    <td>@listing.Id</td>
                    <td>@listing.Name</td>
                    <td>@listing.Location.Name</td>
                    <td>
                        <a href="/listings/view/@listing.Id" class="btn btn-primary">
                            <span class="oi oi-book"></span>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<SurveyPrompt Title="Any questions/problems?" />

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Search search { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Listing> Listings;

    protected async override Task OnInitializedAsync()
    {
        Listings = await _client.GetFromJsonAsync<List<Listing>>($"{Endpoints.ListingsEndpoint}");
    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        await js.InvokeVoidAsync("AddDataTable", "#listingsTable");
    }
    public void Dispose()
    {
        js.InvokeVoidAsync("DataTablesDispose", "#listingsTable");
    }
}
