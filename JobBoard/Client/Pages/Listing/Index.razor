@page "/listings/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]



<h3 class="card-title"><b><u>Jobs</u></b></h3>
<br />
<a href="/listings/create" class="btn btn-secondary">
    <span class="oi oi-plus"></span>
    Create New Listing
</a>
<br />
<br />

@if (Listings == null)
{
    <div class="alert alert-info">Loading Jobs...</div>
}
else
{
    <table class="table table-responsive">
        <thead>
            <tr>
                <th>Title</th>
                <th>Description</th>
                <th>Employer</th>
                <th>Location</th>
                <!--<th>Reviews</th>-->
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var listing in Listings)
            {
                <tr>
                    <td>@listing.Name</td>
                    <td>@listing.Description</td>
                    <td>@listing.Employer.FirstName</td>
                    <td>@listing.Location.Name</td>
                    <!--<td>@listing.Review.Description</td>-->
                <td>
                        <a href="/listings/view/@listing.Id" class="btn btn-primary">
                            <span class="oi oi-eye"></span>
                        </a>
                    <a href="/listings/edit/@listing.Id" class="btn btn-warning">
                        <span class="oi oi-pencil"></span>
                    </a>
                    <button class="btn btn-danger" @onclick="@(()=>Delete(listing.Id))">
                        <span class="oi oi-delete"></span>
                        <!-- Create appointment booking item -->
                    </button>
                </td>
                </tr>
            }
        </tbody>
    </table>
}

<SurveyPrompt Title="Any questions/problems?" />

@code {

        private int currentCount = 0;

        private void IncrementCount()
        {
            currentCount++;
        }
    
private List<Listing> Listings;

    protected async override Task OnInitializedAsync()
    {

        Listings = await _client.GetFromJsonAsync<List<Listing>>($"{Endpoints.ListingsEndpoint}");
    }

    async Task Delete(int listingId)
    {
        var listing = Listings.First(q => q.Id == listingId);
        var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {listing.Name}?");
        if (confirm)
        {
            await _client.DeleteAsync($"{Endpoints.ListingsEndpoint}/{listingId}");
            await OnInitializedAsync();
        }
    }

}
