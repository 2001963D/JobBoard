@inject HttpClient _client



<EditForm Model="@appointment" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <fieldset disabled="@Disabled">
        <div class="form-group">
            <label>Listings: </label>

            <div>
                <InputSelect @bind-Value="@appointment.ListingId" class="form-control">
                    <option value="">--Pick a Job--</option>
                    @if (Listings != null)
                    {
                        foreach (var listing in Listings)
                        {
                            <option value="@listing.Id">
                                @listing.Name - @listing.Location.Name
                            </option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => appointment.ListingId)" />
            </div>
        </div>


        <div class="form-group">
            <label>Date of Appointment: </label>
            <div>
                <InputDate @bind-Value="@appointment.DateIn" class="form-control" />
                <ValidationMessage For="@(() => appointment.DateIn)" />
            </div>
        </div>

        @*<div class="form-group">
            <label>Location of Appointment: </label>
            <div>
                <InputSelect @bind-Value="@appointment.ListingId" class="form-control">
                    <option value="">--Select Location--</option>
                    @if (Listings != null)
                    {
                        foreach (var lname in Listings)
                        {
                            <option value="@lname.Id">
                                @lname.Location.Name
                            </option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => appointment.ListingId)" />
            </div>
        </div>*@

        @if (appointment.Id > 0)
        {
            <div class="form-group">
                <label>Date In: </label>
                <div>
                    <InputDate @bind-Value="@appointment.DateIn" class="form-control" />
                    <ValidationMessage For="@(() => appointment.DateIn)" />
                </div>
            </div>
        }

        <br />
    </fieldset>
    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            Book Appointment
        </button>
    }
    <BackToList Target="appointments" />
</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Appointment appointment { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Listing> Listings;
    private IList<Location> Locations;
    private IList<Employer> Employers;

    protected async override Task OnInitializedAsync()
    {
        Listings = await _client.GetFromJsonAsync<List<Listing>>($"{Endpoints.ListingsEndpoint}");
        Locations = await _client.GetFromJsonAsync<List<Location>>($"{Endpoints.LocationsEndpoint}");
        Employers = await _client.GetFromJsonAsync<List<Employer>>($"{Endpoints.EmployersEndpoint}");
        //appointment.DateOut = DateTime.Now;
    }
}
